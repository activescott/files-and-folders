on:
  pull_request:
    branches: [main, beta, alpha]

jobs:
  commitlint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          # https://github.com/actions/checkout#fetch-all-history-for-all-tags-and-branches
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: install dependencies
        run: |
          npm ci

      - name: tracing
        run: |
          echo "github.event_name: ${{ github.event_name }}"
          echo "github.event.pull_request.number: ${{ github.event.pull_request.number }}"
          echo "github.event.pull_request.base.sha: ${{ github.event.pull_request.base.sha }}"
          echo "github.event.pull_request.head.sha: ${{ github.event.pull_request.head.sha }}"
          echo git log:
          git log -10 --pretty='oneline'

      - name: commitlint
        id: commitlint
        continue-on-error: true
        run: |
          npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

      # for andymckay/labeler see https://github.com/marketplace/actions/simple-issue-labeler
      - name: label when commitlint fails
        if: ${{ steps.commitlint.outcome == 'failure' }}
        uses: andymckay/labeler@1.0.4
        with:
          add-labels: "commit-message-rule-violation"

      - name: label removal when commitlint succeeds
        if: ${{ steps.commitlint.outcome == 'success' }}
        uses: andymckay/labeler@1.0.4
        with:
          remove-labels: "commit-message-rule-violation"

      - name: job summary on failure
        if: ${{ steps.commitlint.outcome == 'failure' }}
        run: echo "### [Commit message conventions](https://github.com/activescott/files-and-folders/tree/main#commit-message-conventions) violated! :warning:" >> $GITHUB_STEP_SUMMARY

      - name: job summary on success
        if: ${{ steps.commitlint.outcome == 'success' }}
        run: echo "### [Commit message conventions](https://github.com/activescott/files-and-folders/tree/main#commit-message-conventions) look good :sunglasses:" >> $GITHUB_STEP_SUMMARY

      # Comment with GitHub CLI: https://docs.github.com/en/actions/using-workflows/using-github-cli-in-workflows
      # This works but adds the comment for every commit even if new commits are fine. TODO: check for the label and only add the comment if the label doesn't yet exist.
      #- name: comment when commitlint fails
      #  if: ${{ steps.commitlint.outcome == 'failure' }}
      #  run: gh pr comment "$COMMENT_PR" --body "$COMMENT_BODY"
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #    COMMENT_PR: ${{ github.event.pull_request.html_url }}
      #    COMMENT_BODY: "ðŸ‘‹ Thanks for the PR! A commit message on this PR doesn't follow the conventions at https://github.com/activescott/files-and-folders/tree/main#commit-message-conventions. That might be okay but it may also not publish a package release that you intend to. This is just an FYI and maintainers can help with this though, so don't fret."
      #
      #- name: comment when commitlint succeeds
      #  if: ${{ steps.commitlint.outcome == 'success' }}
      #  run: gh pr comment "$COMMENT_PR" --body "$COMMENT_BODY"
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #    COMMENT_PR: ${{ github.event.pull_request.html_url }}
      #    COMMENT_BODY: "ðŸ‘‹ Thanks for the PR and for following our commit message conventions!"
